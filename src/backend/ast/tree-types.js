export const tree_types = {

  names: [
    'LBRACE',
    'RBRACE',
    'LPAREN',
    'RPAREN',
    'LBRACK',
    'RBRACK',
    'COMMA',
    'QUESTION',
    'COLON',
    'SEMICOLON',
    'CATCH',
    'GLOBAL',
    'AS',
    'VOID',
    'IMPORT',
    'IF',
    'ELSE',
    'WHILE',
    'DO',
    'FOR',
    'BREAK',
    'CONTINUE',
    'SWITCH',
    'CASE',
    'DEFAULT',
    'BOOLEAN_LITERAL',
    'CONST',
    'VAR',
    'POW',
    'NEW',
    'RETURN',
    'BOOLEAN',
    'INTEGER',
    'DOUBLE',
    'CHAR',
    'STRING',
    'LTEQ',
    'LT',
    'REQEQ',
    'EQEQ',
    'GTEQ',
    'GT',
    'NOTEQ',
    'OROR',
    'XOR',
    'ANDAND',
    'NOT',
    'EQ',
    'PLUSPLUS',
    'PLUS',
    'MINUSMINUS',
    'MINUS',
    'MULT',
    'DIV',
    'MOD',
    'DOT',
    'ATTR_DECLARATION',
    'NULL_LITERAL',
    'IDENTIFIER',
    'DOUBLE_LITERAL',
    'INTEGER_LITERAL',
    'STRING_LITERAL',
    'CAST',
    'ARRAY',
    'PREINC',
    'PREDEC',
    'POSTINC',
    'POSTDEC',
    'ARRAY_ACCESS',
    'FUNCTION_CALL',
    'ARRAY_DIMS',
    'DIM',
    'NEW_ARRAY',
    'EXPRESSION_LIST',
    'CONSTRUCTOR_CALL',
    'CASE_LABEL_LIST',
    'SWITCH_BODY',
    'EXPRESSION_STMT',
    'NO_OP',
    'VAR_DECLARATION',
    'STMT_LIST',
    'BLOCK',
    'VARIABLE_INITIALIZER',
    'DEFINE',
    'TYPE_DECLARATIONS',
    'STRUCT_DECLARATION',
    'STRUCT_LIST',
    'ARRAY_TYPE',
    'ASSIGN_LIST',
    'FUNCTION_DECLARATION',
    'METHOD_HEADER',
    'FORMAL_PARAMETER',
    'FORMAL_PARAMETER_LIST',
    'CONSTRUCTOR_DECLARATOR',
    'CONSTRUCTOR_DECLARATION',
    'PROGRAM',
    'BODY',
    'METHOD_DECLARATOR',
    'NATIVE_FUNCTION_CALL',
    'OBJECT',
    'MAIN_DECLARATION',
    'ARRAY_IDENTIFIER',
    'CHARACTER_LITERAL',
    'ARRAY_LITERAL',
    'TRY',
    'VAR_DECLARATION_NO_TYPE',
    'ID_LIST',
    'FOR_INIT',
    'FOR_UPDATE',
    'FOR_COND',
    'IMPORTS',
    'FINAL',
    'DOLLAR',
    'THROW'
  ],
  types: {
    LBRACE: 0,
    RBRACE: 1,
    LPAREN: 2,
    RPAREN: 3,
    LBRACK: 4,
    RBRACK: 5,
    COMMA: 6,
    QUESTION: 7,
    COLON: 8,
    SEMICOLON: 9,
    CATCH: 10,
    GLOBAL: 11,
    AS: 12,
    VOID: 13,
    IMPORT: 14,
    IF: 15,
    ELSE: 16,
    WHILE: 17,
    DO: 18,
    FOR: 19,
    BREAK: 20,
    CONTINUE: 21,
    SWITCH: 22,
    CASE: 23,
    DEFAULT: 24,
    BOOLEAN_LITERAL: 25,
    CONST: 26,
    VAR: 27,
    POW: 28,
    NEW: 29,
    RETURN: 30,
    BOOLEAN: 31,
    INTEGER: 32,
    DOUBLE: 33,
    CHAR: 34,
    STRING: 35,
    LTEQ: 36,
    LT: 37,
    REQEQ: 38,
    EQEQ: 39,
    GTEQ: 40,
    GT: 41,
    NOTEQ: 42,
    OROR: 43,
    XOR: 44,
    ANDAND: 45,
    NOT: 46,
    EQ: 47,
    PLUSPLUS: 48,
    PLUS: 49,
    MINUSMINUS: 50,
    MINUS: 51,
    MULT: 52,
    DIV: 53,
    MOD: 54,
    DOT: 55,
    ATTR_DECLARATION: 56,
    NULL_LITERAL: 57,
    IDENTIFIER: 58,
    DOUBLE_LITERAL: 59,
    INTEGER_LITERAL: 60,
    STRING_LITERAL: 61,
    CAST: 62,
    ARRAY: 63,
    PREINC: 64,
    PREDEC: 65,
    POSTINC: 66,
    POSTDEC: 67,
    ARRAY_ACCESS: 68,
    FUNCTION_CALL: 69,
    ARRAY_DIMS: 70,
    DIM: 71,
    NEW_ARRAY: 72,
    EXPRESSION_LIST: 73,
    CONSTRUCTOR_CALL: 74,
    CASE_LABEL_LIST: 75,
    SWITCH_BODY: 76,
    EXPRESSION_STMT: 77,
    NO_OP: 78,
    VAR_DECLARATION: 79,
    STMT_LIST: 80,
    BLOCK: 81,
    VARIABLE_INITIALIZER: 82,
    DEFINE: 83,
    TYPE_DECLARATIONS: 84,
    STRUCT_DECLARATION: 85,
    STRUCT_LIST: 86,
    ARRAY_TYPE: 87,
    ASSIGN_LIST: 88,
    FUNCTION_DECLARATION: 89,
    METHOD_HEADER: 90,
    FORMAL_PARAMETER: 91,
    FORMAL_PARAMETER_LIST: 92,
    CONSTRUCTOR_DECLARATOR: 93,
    CONSTRUCTOR_DECLARATION: 94,
    PROGRAM: 95,
    BODY: 96,
    METHOD_DECLARATOR: 97,
    NATIVE_FUNCTION_CALL: 98,
    OBJECT: 99,
    MAIN_DECLARATION: 100,
    ARRAY_IDENTIFIER: 101,
    CHARACTER_LITERAL: 102,
    ARRAY_LITERAL: 103,
    TRY: 104,
    VAR_DECLARATION_NO_TYPE: 105,
    ID_LIST: 106,
    FOR_INIT: 107,
    FOR_UPDATE: 108,
    FOR_COND: 109,
    IMPORTS: 110,
    FINAL: 111,
    DOLLAR: 112,
    THROW: 113
  }
}
